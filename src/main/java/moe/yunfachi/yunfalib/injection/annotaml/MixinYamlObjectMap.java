package moe.yunfachi.yunfalib.injection.annotaml;

import net.william278.annotaml.YamlFile;
import net.william278.annotaml.YamlObjectMap;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Redirect;

import java.lang.annotation.Annotation;

@Mixin(YamlObjectMap.class)
public class MixinYamlObjectMap {
    @Redirect(remap=false, method = "<init>", at = @At(value = "INVOKE", target = "Ljava/lang/Class;isAnnotationPresent(Ljava/lang/Class;)Z"))
    private boolean injected1(Class instance, Class<? extends Annotation> annotationClass) {
        return true;
    }

    @Redirect(remap=false, method = "readDefaults", at = @At(value = "INVOKE", target = "Ljava/lang/Class;isAnnotationPresent(Ljava/lang/Class;)Z"))
    private boolean injected2(Class instance, Class<? extends Annotation> annotationClass) {
        return true;
    }

    @Redirect(remap=false, method = "readDefaults", at = @At(value = "INVOKE", target = "Lnet/william278/annotaml/YamlFile;rootedMap()Z"))
    private boolean injected3(YamlFile instance) {
        return false;
    }

    @Redirect(remap=false, method = "readDefaults", at = @At(value = "INVOKE", target = "Lnet/william278/annotaml/YamlFile;header()Ljava/lang/String;"))
    private String injected4(YamlFile instance) {
        return "Generated by yunfaLib ( https://github.com/yunfachi/yunfaLib )";
    }

    @Redirect(remap=false, method = "applyMapTo", at = @At(value = "INVOKE", target = "Lnet/william278/annotaml/YamlFile;rootedMap()Z"))
    private boolean injected5(YamlFile instance) {
        return false;
    }

    @Redirect(remap=false, method = "readFromYaml", at = @At(value = "INVOKE", target = "Lnet/william278/annotaml/YamlFile;rootedMap()Z"))
    private boolean injected6(YamlFile instance) {
        return false;
    }
}
